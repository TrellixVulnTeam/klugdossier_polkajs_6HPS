"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Code = exports.CodeSubmittableResult = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldLooseKey"));

var _api = require("@polkadot/api");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _util2 = require("../util.cjs");

var _Base = require("./Base.cjs");

var _Blueprint = require("./Blueprint.cjs");

var _Contract = require("./Contract.cjs");

var _util3 = require("./util.cjs");

// Copyright 2017-2021 @polkadot/api-contract authors & contributors
// SPDX-License-Identifier: Apache-2.0
const l = (0, _util.logger)('Code');

class CodeSubmittableResult extends _api.SubmittableResult {
  constructor(result, blueprint, contract) {
    super(result);
    this.blueprint = void 0;
    this.contract = void 0;
    this.blueprint = blueprint;
    this.contract = contract;
  }

}

exports.CodeSubmittableResult = CodeSubmittableResult;

var _tx = (0, _classPrivateFieldLooseKey2.default)("tx");

var _instantiate = (0, _classPrivateFieldLooseKey2.default)("instantiate");

var _instantiateCurrent = (0, _classPrivateFieldLooseKey2.default)("instantiateCurrent");

var _instantiatePrev = (0, _classPrivateFieldLooseKey2.default)("instantiatePrev");

var _transformEvents = (0, _classPrivateFieldLooseKey2.default)("transformEvents");

class Code extends _Base.Base {
  constructor(api, abi, wasm, decorateMethod) {
    super(api, abi, decorateMethod);
    this.code = void 0;
    Object.defineProperty(this, _tx, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _instantiate, {
      writable: true,
      value: (constructorOrId, options, params) => {
        return (0, _util.isFunction)(this.api.tx.contracts.instantiateWithCode) ? (0, _classPrivateFieldLooseBase2.default)(this, _instantiateCurrent)[_instantiateCurrent](constructorOrId, options, params) : (0, _classPrivateFieldLooseBase2.default)(this, _instantiatePrev)[_instantiatePrev](constructorOrId, options, params);
      }
    });
    Object.defineProperty(this, _instantiateCurrent, {
      writable: true,
      value: (constructorOrId, {
        gasLimit = 0,
        salt,
        value = 0
      }, params) => {
        return this.api.tx.contracts.instantiateWithCode(value, gasLimit, (0, _util.compactAddLength)(this.code), this.abi.findConstructor(constructorOrId).toU8a(params), (0, _util3.encodeSalt)(salt)).withResultTransform((0, _classPrivateFieldLooseBase2.default)(this, _transformEvents)[_transformEvents]);
      }
    });
    Object.defineProperty(this, _instantiatePrev, {
      writable: true,
      value: (constructorOrId, {
        gasLimit = 0,
        salt,
        value = 0
      }, params) => {
        var _this$api$tx$utility;

        (0, _util.assert)((0, _util.isFunction)((_this$api$tx$utility = this.api.tx.utility) === null || _this$api$tx$utility === void 0 ? void 0 : _this$api$tx$utility.batch), 'Your chain does not include the utility pallet, for contracts v2 deployment, this is required');
        const encodedSalt = (0, _util3.encodeSalt)(salt);
        const withSalt = this.api.tx.contracts.instantiate.meta.args.length === 5;
        const encoded = this.abi.findConstructor(constructorOrId).toU8a(params, withSalt ? _util3.EMPTY_SALT : encodedSalt);
        const codeHash = (0, _utilCrypto.blake2AsU8a)(this.code);
        return this.api.tx.utility.batch([this.api.tx.contracts.putCode((0, _util.compactAddLength)(this.code)), withSalt ? this.api.tx.contracts.instantiate(value, gasLimit, codeHash, encoded, encodedSalt) // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore old style with salt included in the params itself
        : this.api.tx.contracts.instantiate(value, gasLimit, codeHash, encoded)]).withResultTransform((0, _classPrivateFieldLooseBase2.default)(this, _transformEvents)[_transformEvents]);
      }
    });
    Object.defineProperty(this, _transformEvents, {
      writable: true,
      value: result => {
        return new CodeSubmittableResult(result, ...((0, _util2.applyOnEvent)(result, ['CodeStored', 'Instantiated'], records => records.reduce(([blueprint, contract], {
          event
        }) => this.api.events.contracts.Instantiated.is(event) ? [blueprint, new _Contract.Contract(this.api, this.abi, event.data[1], this._decorateMethod)] : this.api.events.contracts.CodeStored.is(event) ? [new _Blueprint.Blueprint(this.api, this.abi, event.data[0], this._decorateMethod), contract] : [blueprint, contract], [])) || []));
      }
    });
    this.code = (0, _util.isWasm)(this.abi.project.source.wasm) ? this.abi.project.source.wasm : (0, _util.u8aToU8a)(wasm);
    (0, _util.assert)((0, _util.isWasm)(this.code), 'No WASM code provided');
    this.abi.constructors.forEach(c => {
      const messageName = (0, _util.stringCamelCase)(c.identifier);

      if ((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx][messageName])) {
        (0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx][messageName] = (0, _util3.createBluePrintTx)((o, p) => (0, _classPrivateFieldLooseBase2.default)(this, _instantiate)[_instantiate](c, o, p));
      }
    });
  }

  get tx() {
    return (0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx];
  }
  /**
   * @description Deploy the code bundle and the contract, creating a Blueprint.
   * @deprecated Use the `code.tx.<constructor>(...) format to put code and deploy
   */


  createContract(constructorOrId, options, params) {
    l.warn('.createContract is deprecated, use code.tx.<constructorName>(...) instead (where code refers to this instance)');
    return (0, _classPrivateFieldLooseBase2.default)(this, _instantiate)[_instantiate](constructorOrId, options, params);
  }

}

exports.Code = Code;