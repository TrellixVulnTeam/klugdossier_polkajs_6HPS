import type { ChainProperties, ContractDisplayName, SiLookupTypeId, SiType } from '@polkadot/types/interfaces';
import type { TypeDef } from '@polkadot/types/types';
import { TypeRegistry } from '@polkadot/types/create';
interface PartialTypeSpec {
    readonly type: SiLookupTypeId;
    readonly displayName?: ContractDisplayName;
}
export declare function getRegistryOffset(id: SiLookupTypeId): number;
export declare class MetaRegistry extends TypeRegistry {
    #private;
    readonly metaTypeDefs: TypeDef[];
    constructor(chainProperties?: ChainProperties);
    setMetaTypes(metaTypes: SiType[]): void;
    getMetaTypeDef(typeSpec: PartialTypeSpec): TypeDef;
}
export {};
