import type { Bytes } from '@polkadot/types';
import type { ChainProperties, ContractProject } from '@polkadot/types/interfaces';
import type { AnyJson } from '@polkadot/types/types';
import type { AbiConstructor, AbiMessage, DecodedEvent, DecodedMessage } from './types';
import { MetaRegistry } from './MetaRegistry';
export declare class Abi {
    #private;
    readonly constructors: AbiConstructor[];
    readonly json: AnyJson;
    readonly messages: AbiMessage[];
    readonly project: ContractProject;
    readonly registry: MetaRegistry;
    constructor(abiJson: AnyJson, chainProperties?: ChainProperties);
    /**
     * Warning: Unstable API, bound to change
     */
    decodeEvent(data: Bytes | Uint8Array): DecodedEvent;
    /**
     * Warning: Unstable API, bound to change
     */
    decodeConstructor(data: Uint8Array): DecodedMessage;
    /**
     * Warning: Unstable API, bound to change
     */
    decodeMessage(data: Uint8Array): DecodedMessage;
    findConstructor(constructorOrId: AbiConstructor | string | number): AbiConstructor;
    findMessage(messageOrId: AbiMessage | string | number): AbiMessage;
}
