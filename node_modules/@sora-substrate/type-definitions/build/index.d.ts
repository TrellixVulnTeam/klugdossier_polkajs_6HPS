export declare const types: {
    Address: string;
    LookupSource: string;
    AssetId: string;
    Keys: string;
    RefCount: string;
    Balance: string;
    TAssetBalance: string;
    MultiCurrencyBalance: string;
    MultiCurrencyBalanceOf: string;
};
export declare const localTypes: {
    Address: string;
    LookupSource: string;
    AssetId: string;
    Keys: string;
    RefCount: string;
    Balance: string;
    TAssetBalance: string;
    MultiCurrencyBalance: string;
    MultiCurrencyBalanceOf: string;
};
export declare const typesBundle: {
    spec: {
        sora: any;
    };
};
export declare const rpc: Record<string, Record<string, any>>;
export declare const typesAlias: Record<string, any>;
export declare const slimOverrideBundle: {
    spec: {
        sora: {
            types: {
                minmax: any;
                types: {
                    Address: string;
                    LookupSource: string;
                    AssetId: string;
                    Keys: string;
                    RefCount: string;
                    Balance: string;
                    TAssetBalance: string;
                    MultiCurrencyBalance: string;
                    MultiCurrencyBalanceOf: string;
                };
            }[];
        };
    };
};
export declare const fullOverrideBundle: {
    spec: {
        sora: {
            alias: Record<string, any>;
            rpc: Record<string, Record<string, any>>;
            types: {
                minmax: any;
                types: {
                    Address: string;
                    LookupSource: string;
                    AssetId: string;
                    Keys: string;
                    RefCount: string;
                    Balance: string;
                    TAssetBalance: string;
                    MultiCurrencyBalance: string;
                    MultiCurrencyBalanceOf: string;
                };
            }[];
        };
    };
};
